# Алфавит GF(32)
A = [1,2,4,8,16,27,13,26,15,30,7,14,28,3,6,12,24,11,22,23,21,17,25,9,18,31,5,10,20,19,29]

# Таблица логарифмов
LOG_A = [None] * 32
for i in range(0, len(A)):
    LOG_A[A[i]] = i

# Буквенный алфавит
alphabet = {
    0: 'А', 1: 'Б', 2: 'Г', 3: 'З', 4: 'П', 5: 'Ы', 6: 'М', 7: 'Щ', 8: 'О', 9: 'Ю',
    10: 'Ж', 11: 'Н', 12: 'Ь', 13: 'В', 14: 'Е', 15: 'Л', 16: 'Ч', 17: 'К', 18: 'Х', 19: 'Ц',
    20: 'Ф', 21: 'Р', 22: 'Ш', 23: 'И', 24: 'С', 25: 'Я', 26: 'Д', 27: 'Й', 28: 'У', 29: 'Т', 30: 'Э'
}

def gf_add(a, b):
    """Сложение в GF(32)"""
    return a ^ b

def calculate_sum():
    """Вычисление суммы до 4 слагаемых с промежуточными результатами"""
    print("СЛОЖЕНИЕ ДО 4 СЛАГАЕМЫХ В GF(32)")
    print("=" * 50)
    
    # Ввод слагаемых
    elements = []
    degrees_input = []
    
    for i in range(4):
        degree_input = input(f"Введите степень слагаемого {i+1} (или '-' если нет): ")
        if degree_input == '-':
            break
        degree = int(degree_input)
        degrees_input.append(degree)
        elements.append(A[degree % 31])
    
    if not elements:
        print("Нет слагаемых для сложения!")
        return None
    
    print(f"\nСлагаемые: " + " + ".join([f"a^{deg}" for deg in degrees_input]))
    
    # Начинаем сложение с первого элемента
    current = elements[0]
    current_degree = degrees_input[0]
    steps = []
    
    print(f"\nНачальное значение: a^{current_degree} = {alphabet[LOG_A[current]]}")
    
    # Складываем остальные элементы
    for i in range(1, len(elements)):
        next_element = elements[i]
        next_degree = degrees_input[i]
        
        result = gf_add(current, next_element)
        result_degree = LOG_A[result]
        
        print(f"\nШаг {i}: a^{current_degree} + a^{next_degree}")
        print(f"  {alphabet[LOG_A[current]]} + {alphabet[LOG_A[next_element]]} = {alphabet[result_degree]}")
        print(f"  a^{current_degree} + a^{next_degree} = a^{result_degree}")
        
        current = result
        current_degree = result_degree
    
    print(f"\n" + "=" * 50)
    print(f"ФИНАЛЬНЫЙ РЕЗУЛЬТАТ: a^{current_degree} = {alphabet[current_degree]}")
    
    return current

# Запускаем вычисление
result = calculate_sum()
